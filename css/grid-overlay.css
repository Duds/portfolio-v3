/**
 * Grid Overlay System
 * Development tool for visualizing the 12-column grid layout
 * Toggle with keyboard shortcut: Ctrl/Cmd + G
 */

/* ================================
   GRID OVERLAY
   ================================ */

.grid-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    pointer-events: none;
    z-index: 9999;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.grid-overlay.active {
    opacity: 1;
}

.grid-container {
    height: 100%;
    margin-left: calc(max(4.1666666667vw, 32px) * 1);
    margin-right: calc(max(4.1666666667vw, 32px) * 1);
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: 24px;
}

.grid-column {
    background: rgba(255, 0, 0, 0.1);
    border-left: 1px solid rgba(255, 0, 0, 0.3);
    border-right: 1px solid rgba(255, 0, 0, 0.3);
    height: 100%;
    position: relative;
}

.grid-column::before {
    content: attr(data-column);
    position: absolute;
    top: 8px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 10px;
    font-weight: 600;
    color: rgba(255, 0, 0, 0.6);
    background: rgba(255, 255, 255, 0.9);
    padding: 2px 6px;
    border-radius: 3px;
    line-height: 1;
}

/* ================================
   GRID SYSTEM FOR COMPONENTS
   ================================ */

/* Container - Use for non-grid content only */
.container {
    margin-left: calc(max(4.1666666667vw, 32px) * 1);
    margin-right: calc(max(4.1666666667vw, 32px) * 1);
}

/* Grid layout - Matches overlay grid structure exactly
 * Applies margins AND grid on same element (like overlay)
 * Usage: <div class="grid-layout"><div class="col-12">...</div></div>
 */
.grid-layout {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: 24px;
    margin-left: calc(max(4.1666666667vw, 32px) * 1);
    margin-right: calc(max(4.1666666667vw, 32px) * 1);
}

/* Column span utilities */
.col-1 { grid-column: span 1; }
.col-2 { grid-column: span 2; }
.col-3 { grid-column: span 3; }
.col-4 { grid-column: span 4; }
.col-5 { grid-column: span 5; }
.col-6 { grid-column: span 6; }
.col-7 { grid-column: span 7; }
.col-8 { grid-column: span 8; }
.col-9 { grid-column: span 9; }
.col-10 { grid-column: span 10; }
.col-11 { grid-column: span 11; }
.col-12 { grid-column: span 12; }

/* Column start utilities */
.col-start-1 { grid-column-start: 1; }
.col-start-2 { grid-column-start: 2; }
.col-start-3 { grid-column-start: 3; }
.col-start-4 { grid-column-start: 4; }
.col-start-5 { grid-column-start: 5; }
.col-start-6 { grid-column-start: 6; }
.col-start-7 { grid-column-start: 7; }
.col-start-8 { grid-column-start: 8; }
.col-start-9 { grid-column-start: 9; }
.col-start-10 { grid-column-start: 10; }
.col-start-11 { grid-column-start: 11; }
.col-start-12 { grid-column-start: 12; }

/* ================================
   RESPONSIVE BREAKPOINTS
   ================================ */

/* Tablet and below - 8 columns */
@media (max-width: 1024px) {
    .grid-container {
        grid-template-columns: repeat(8, 1fr);
        gap: 20px;
    }
    
    .grid-layout {
        grid-template-columns: repeat(8, 1fr);
        gap: 20px;
    }
    
    .grid-column:nth-child(n+9) {
        display: none;
    }
}

/* Mobile landscape and below - 6 columns */
@media (max-width: 768px) {
    .grid-container {
        grid-template-columns: repeat(6, 1fr);
        gap: 16px;
    }
    
    .grid-layout {
        grid-template-columns: repeat(6, 1fr);
        gap: 16px;
    }
    
    .grid-column:nth-child(n+7) {
        display: none;
    }
}

/* Mobile portrait - 4 columns */
@media (max-width: 480px) {
    .grid-container {
        grid-template-columns: repeat(4, 1fr);
        gap: 12px;
    }
    
    .grid-layout {
        grid-template-columns: repeat(4, 1fr);
        gap: 12px;
    }
    
    .grid-column:nth-child(n+5) {
        display: none;
    }
}

/* Small mobile - 4 columns with smaller gap */
@media (max-width: 375px) {
    .grid-container {
        gap: 8px;
    }
    
    .grid-layout {
        gap: 8px;
    }
}

